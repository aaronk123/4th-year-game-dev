local WATER_CHANGE = hash("water_change")
local GAME_COMPLETE = hash("game_complete")
local gval = 103
local gameinprogress = true

lose_message = {"18 billion pounds of plastic trash winds up in our oceans each year...", 
"There are 5.25 trillion pieces of plastic debris in the ocean...", 
"80% of trash in the ocean is from land-based sources...", 
"Plastics cause more than 80% of the negative effects on animals associated with ocean trash...",
"There is an island of garbage twice the size of Texas inside the Pacific Ocean...", 
"Ocean pollutions kills more than one million sea birds each year...", 
"Approximately every square mile of ocean has more than 46,000 pieces of plastic floating in it...",
"Over 100,000 marine animals die every year from plastic entanglement and ingestion..."}

local u = 0

local function random(x, y)
	u = u + 1
	if x ~= nil and y ~= nil then
		return math.floor(x +(math.random(math.randomseed(os.time()+u))*999999 %y))
	else
		return math.floor((math.random(math.randomseed(os.time()+u))*100))
	end
end

function init(self)
	msg.post("@render:", "use_fixed_projection", { zoom = 2.5, near = -30, far = 30 })
	msg.post("@render:", "clear_color", { color = vmath.vector4(0/255, gval/255, 126/255, 255/255) })
	timer.delay(1.5, true, update_gval)
end

function update_water(change_rate)
	gval = gval - change_rate
	msg.post("@render:", "clear_color", { color = vmath.vector4(0/255, gval/255, 126/255, 255/255) })
end

function update_gval()
	if (gameinprogress) then	
		if (gval <= 251) then
			gval = gval + 4
			msg.post("@render:", "clear_color", { color = vmath.vector4(0/255, gval/255, 126/255, 255/255) })
			if (gval > 200) then
				msg.post("/hud#rubbish_remaining", "update_end_message", {newendmessage = lose_message[random(1,9)]})
				gameinprogress = false
			end
		end
	end
end
		
function on_message(self, message_id, message, sender)
	if message_id == WATER_CHANGE then
		print("water change")
		update_water(25)
	elseif message_id == GAME_COMPLETE then
		gameinprogress = false
		msg.post("@render:", "clear_color", { color = vmath.vector4(0/255, 106/255, 126/255, 255/255) })
	end
end